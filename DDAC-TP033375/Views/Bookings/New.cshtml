@model DDAC_TP033375.ViewModels.BookingFormViewModel

@{
	ViewBag.Title = "New Booking";
}

<h2>New Booking</h2>

<div class="row">
	<div class="col-md-6">
		<form id="containerForm" method="post" role="form">
			<div class="panel panel-default">
				<div class="panel-heading"><strong>Container</strong></div>
				<div class="panel-body">
					<div class="form-group">
						<div class="input-group">
							<span class="input-group-addon">Type</span>
							<input id="containerType" name="containerType" type="text" class="form-control">
							<span class="input-group-addon">
								Weight (tonne/t)
								<span class="glyphicon glyphicon-info-sign" aria-hidden="true" rel="tooltip" title="1 Tonne = 1000 Kilogram"></span>
							</span>
							<input id="containerWeight" name="containerWeight" class="form-control" type="text">
							<span class="input-group-addon">Amount</span>
							<input id="containerAmount" name="containerAmount" type="text" class="form-control">
							<span class="input-group-btn">
								<input type="submit" class="btn btn-default" value="Add">
							</span>
						</div>
					</div>
					<div class="row">
						<div class="col-md-offset-1">
							<div id="containerList" class="col-md-10 list-group">
							</div>
						</div>
					</div>
				</div>
			</div>
		</form>
	</div>
	<div class="col-md-6">
		<div class="panel panel-info">
			<div class="panel-heading">
				<h3 class="panel-title">Customer</h3>
			</div>
			<div class="panel-body">
				<div class="row">
					<div class="col-xs-5" style="text-align: right"><strong>@Html.DisplayNameFor(b => b.Customer.Name)</strong></div>
					<div class="col-xs-7">@Html.DisplayFor(b => b.Customer.Name)</div>
				</div>
				<div class="row">
					<div class="col-xs-5" style="text-align: right"><strong>IC / Passport Number</strong></div>
					<div class="col-xs-7">@Html.DisplayFor(b => b.Customer.IdentificationNumber)</div>
				</div>
				<div class="row">
					<div class="col-xs-5" style="text-align: right"><strong>@Html.DisplayNameFor(b => b.Customer.Email)</strong></div>
					<div class="col-xs-7">@Html.DisplayFor(b => b.Customer.Email)</div>
				</div>
				<div class="row">
					<div class="col-xs-5" style="text-align: right"><strong>@Html.DisplayNameFor(b => b.Customer.PhoneNumber)</strong></div>
					<div class="col-xs-7">@Html.DisplayFor(b => b.Customer.PhoneNumber)</div>
				</div>
			</div>
		</div>
		<form id="scheduleForm" class="form-horizontal">
			<div class="panel panel-default">
				<div class="panel-heading"><strong>Schedule</strong></div>
				<div class="panel-body">
					<div class="form-group">
						<label class="col-md-5 control-label right">Origin</label>
						<div class="col-md-7">
							<select id="bookingOrigin" name="bookingOrigin" class="form-control" onchange="fillDestination()">
								<option value="">-- From --</option>
							</select>
						</div>
					</div>
					<div class="form-group">
						<label class="col-md-5 control-label right">Destination</label>
						<div class="col-md-7">
							<select id="bookingDestination" name="bookingDestination" class="form-control" onchange="fillTime()">
								<option value="">-- To --</option>
							</select>
						</div>
					</div>
					<div class="form-group">
						<label class="col-md-5 control-label right">Departure Time (MM/DD/YYYY)</label>
						<div class="col-md-7">
							<select id="bookingDepartureTime" name="bookingDepartureTime" class="form-control" onchange="fillShip()">
								<option value="">-- Time Available --</option>
							</select>
						</div>
					</div>
					<div class="form-group">
						<label class="col-md-5 control-label right">Ship</label>
						<div class="col-md-7">
							<select id="shipAvailable" name="shipAvailable" class="form-control">
								<option value="">-- Ship Available --</option>
							</select>
						</div>
					</div>
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-5 right">
					@Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn btn-default" })
				</div>
				<div class="col-md-7">
					<input type="submit" class="btn btn-success" value="Create" />
				</div>
			</div>
		</form>
	</div>
</div>

<br /><br /><br />

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	@*<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>*@

	<script>
		var numberOfContainer = 0;
		var viewModel = {
			ContainerIds: []
		};

		toastr.options = {
			"closeButton": true,
			"debug": false,
			"newestOnTop": false,
			"progressBar": true,
			"positionClass": "toast-top-right",
			"preventDuplicates": true,
			"onclick": null,
			"showDuration": "300",
			"hideDuration": "1000",
			"timeOut": "10000",
			"extendedTimeOut": "10000",
			"showEasing": "swing",
			"hideEasing": "linear",
			"showMethod": "fadeIn",
			"hideMethod": "fadeOut"
		}

		function fillOrigin() {
			if (numberOfContainer === 0) {
				$("#bookingOrigin").html("").append(
					$('<option></option>').val('').html("-- From --")); // clear before appending new list
				$("#bookingDestination").html("").append(
					$('<option></option>').val('').html("-- To --")); // clear before appending new list
				$("#bookingDepartureTime").html("").append(
					$('<option></option>').val('').html("-- Time Available --")); // clear before appending new list
				$("#shipAvailable").html("").append(
					$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list
			} else {
				$.ajax({
					url: '@Url.Action("FillOrigin")',
					type: "GET",
					dataType: "JSON",
					data: {
						numberOfContainer: numberOfContainer
					},
					success: function (origins) {
						$("#bookingOrigin").html("").append(
							$('<option></option>').val('').html("-- From --")); // clear before appending new list
						$.each(origins, function (i, origin) {
							$("#bookingOrigin").append(
								$('<option></option>').val(origin.Id).html(origin.Origin));
						});

						$("#bookingDestination").html("").append(
							$('<option></option>').val('').html("-- To --")); // clear before appending new list
						$("#bookingDepartureTime").html("").append(
							$('<option></option>').val('').html("-- Time Available --")); // clear before appending new list
						$("#shipAvailable").html("").append(
							$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list
					}
				});
			}
		}

		function fillDestination() {
			var origin = $('#bookingOrigin :selected').text();
			$.ajax({
				url: '@Url.Action("FillDestination")',
				type: "GET",
				dataType: "JSON",
				data: {
					origin: origin,
					numberOfContainer: numberOfContainer
				},
				success: function (destinations) {
					$("#bookingDestination").html("").append(
						$('<option></option>').val('').html("-- To --")); // clear before appending new list
					$.each(destinations, function (i, destination) {
						$("#bookingDestination").append(
							$('<option></option>').val(destination.Id).html(destination.Destination));
					});

					$("#bookingDepartureTime").html("").append(
						$('<option></option>').val('').html("-- Time Available --")); // clear before appending new list
					$("#shipAvailable").html("").append(
						$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list
				}
			});
		}

		function fillTime() {
			var origin = $('#bookingOrigin :selected').text();
			var destination = $('#bookingDestination :selected').text();
			$.ajax({
				url: '@Url.Action("FillTime")',
				type: "GET",
				dataType: "JSON",
				data: {
					origin: origin,
					destination: destination,
					numberOfContainer: numberOfContainer
				},
				success: function (schedules) {
					$("#bookingDepartureTime").html("").append(
						$('<option></option>').val('').html("-- Time Available --")); // clear before appending new list
					$.each(schedules, function (i, schedule) {
						$("#bookingDepartureTime").append(
							$('<option></option>').val(schedule.Id).html(JsonToJSTime(schedule.DepartureTime)));
					});

					$("#shipAvailable").html("").append(
						$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list
				}
			});
		}

		function fillShip() {
			var scheduleId = $('#bookingDepartureTime :selected').val();
			$.ajax({
				url: '@Url.Action("FillShip")',
				type: "GET",
				dataType: "JSON",
				data: {
					scheduleId: scheduleId,
					numberOfContainer: numberOfContainer
				},
				success: function (ships) {
					$("#shipAvailable").html("").append(
						$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list
					$.each(ships, function (i, ship) {
						$("#shipAvailable").append(
							$('<option></option>').val(ship.Id).html(ship.Name));
					});
				}
			});
		}

		function JsonToJSTime(jsonDateTime) {
			var jsDate = new Date(jsonDateTime.match(/\d+/)[0] * 1); // Convert json to javascript datetime format

			var date = jsDate.getDate();
			var month = jsDate.getMonth() + 1;
			var hours = jsDate.getHours();
			var minutes = jsDate.getMinutes();
			var ampm = hours >= 12 ? 'PM' : 'AM';

			date = date < 10 ? '0' + date : date; // the date 0-9 should be 01-09
			month = month < 10 ? '0' + month : month; // the month 0-9 should be 01-09
			hours = hours % 12;
			hours = hours ? hours : 12; // the hour '0' should be '12'
			minutes = minutes < 10 ? '0' + minutes : minutes; // the minutes 0-9 should be 01-09

			var strTime = hours + ':' + minutes + ' ' + ampm;

			return month + "/" + date + "/" + jsDate.getFullYear() + "  " + strTime;
		}

		function removeArrayElement(arr, value) {
			var index = arr.indexOf(value);
			arr.splice(index, 1);

			return arr;
		}

		$("#containerList").on("click", ".js-delete", function (e) {
			e.preventDefault();

			var button = $(this);
			var id = button.attr("id");
			var info = button.attr("data-info");
			var amount = button.attr("data-amount");

			bootbox.confirm("Are you sure you want to delete this container, <strong>" + info + "</strong>?",
				function (result) {
					if (result) {
						$.ajax({
							url: '@Url.Action("DeleteContainer")',
							type: "POST",
							data: { id: id },
							dataType: "JSON",
							success: function(response) {
								if (response != null && response.success) {
									$('#' + id).remove();
									viewModel.ContainerIds = removeArrayElement(viewModel.ContainerIds, id);
									numberOfContainer -= parseInt(amount, 10);
									fillOrigin();
									toastr.success(response.responseText);
								} else {
									toastr.error(response.responseText);
								}
							},
							error: function(response) {
								toastr.error("ERROR!");
							}
						});
					}
				});
		});

		$(function() {
			$("[rel='tooltip']").tooltip();
		});

		$(document).ready(function() {
			var tempContainer = {};

			$('#containerForm').validate({
				debug: true,

				rules: {
					containerType: {
						required: true
					},
					containerWeight: {
						required: true,
						number: true,
						range: [1, 30]
					},
					containerAmount: {
						required: true,
						digits: true,
						range: [1, 100]
					}
				},
				submitHandler: function () {

					tempContainer.ItemType = $('#containerType').val();
					tempContainer.WeightInTonne = $('#containerWeight').val();
					tempContainer.Amount = $('#containerAmount').val();

					$.ajax({
						url: '@Url.Action("CreateContainer")',
						type: "POST",
						data: JSON.stringify(tempContainer),
						dataType: "json",
						contentType: "application/json; charset=utf-8",
						success: function(response) {
							if (response != null && response.success) {

								var details = response.newContainer.ItemType + " (" +
									response.newContainer.WeightInTonne + " t)";

								$('#containerList').append("<a href='#' id='" + response.newContainer.Id +
									"' class='list-group-item js-delete' data-info='" + details +
									" (x" + response.newContainer.Amount + ")' data-amount='" +
									response.newContainer.Amount + "'><span class='badge'>" +
									response.newContainer.Amount + "</span>" + details + "</a>");

								$('#containerType').val('');
								$('#containerWeight').val('');
								$('#containerAmount').val('');

								viewModel.ContainerIds.push(response.newContainer.Id);
								numberOfContainer += parseInt(tempContainer.Amount, 10);
								fillOrigin();
								toastr.success(response.responseText);
							} else {
								toastr.error(response.responseText);
							}
						},
						error: function(response) {
							toastr.error("ERROR!");
						}
					});
					return false;
				}
			});


			$('#scheduleForm').validate({
				debug: true,

				rules: {
					bookingOrigin: {
						required: true
					},
					bookingDestination: {
						required: true
					},
					bookingDepartureTime: {
						required: true
					},
					shipAvailable: {
						required: true
					}
				},
				submitHandler: function () {

					viewModel.CustomerId = @Model.Customer.Id;
					viewModel.ScheduleId = $('#bookingDepartureTime').val();
					viewModel.ShipId = $('#shipAvailable').val();

					$.ajax({
						url: '@Url.Action("Create")',
						type: "POST",
						data: JSON.stringify(viewModel),
						dataType: "json",
						contentType: "application/json; charset=utf-8",
						success: function(response) {
							if (response != null && response.success) {

								numberOfContainer = 0;
								viewModel = {
									ContainerIds: []
								};

								$('#containerList').empty();
								$("#bookingOrigin").html("").append(
									$('<option></option>').val('').html("-- From --")); // clear before appending new list
								$("#bookingDestination").html("").append(
									$('<option></option>').val('').html("-- To --")); // clear before appending new list
								$("#bookingDepartureTime").html("").append(
									$('<option></option>').val('').html("-- Time Available --")); // clear before appending new list
								$("#shipAvailable").html("").append(
									$('<option></option>').val('').html("-- Ship Available --")); // clear before appending new list

								toastr.success(response.responseText);
							} else {
								toastr.error(response.responseText);
							}
						},
						error: function(response) {
							toastr.error("ERROR!");
						}
					});
					return false;
				}
			});

		});
	</script>
}
